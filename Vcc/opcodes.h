// Copyright (c) 2020 - 2023 kio@little-bat.de
// BSD-2-Clause license
// https://opensource.org/licenses/BSD-2-Clause


#ifndef M
  #define M_wasnt_defined
  #define M(MNEMONIC, NAME, ARGS) MNEMONIC
  #include <stdint.h>
enum Opcode : uint16_t {
#endif

	M(NOP, "nop", NOARG),
	M(PUSH_TOP, "push_top", NOARG),
	M(POP_TOP, "pop_top", NOARG),

	M(PUSH0, "push0", NOARG),
	M(PUSH0x2, "push0x2", NOARG),
	M(PUSH0x3, "push0x3", NOARG),
	M(PUSH0x4, "push0x4", NOARG),

	M(IVAL_nopush, "", ARGi16),
	M(IVAL, "ival16", ARGi16),
	M(IVALi16_nopush, "", ARGi16),
	M(IVALi16, "ival16", ARGi16),

	M(GVAR_nopush, "", ARGu16),
	M(GGET_nopush, "", ARGu16),
	M(GGETl_nopush, "", ARGu16),
	M(GVAR, "gvar", ARGu16),
	M(GGET, "gget", ARGu16),
	M(GSET, "gset", ARGu16),
	M(GGETl, "gget.l", ARGu16),
	M(GSETl, "gset.l", ARGu16),

	M(LVAR_nopush, "", ARGu16),
	M(LGET_nopush, "", ARGu16),
	M(LGETl_nopush, "", ARGu16),
	M(LVAR, "lvar", ARGu16),
	M(LGET, "lget", ARGu16),
	M(LSET, "lset", ARGu16),
	M(LGETl, "lget", ARGu16),
	M(LSETl, "lset", ARGu16),

	M(IVAR, "ivar", ARGu16),
	M(IVAR8, "ivar8", ARGu16),
	M(IVAR16, "ivar16", ARGu16),
	M(IGET, "iget", ARGu16),
	M(IGETi8, "iget8", ARGu16),
	M(IGETu8, "igetu8", ARGu16),
	M(IGETi16, "iget16", ARGu16),
	M(IGETu16, "igetu16", ARGu16),
	M(ISET, "iset", ARGu16),
	M(ISET8, "iset8", ARGu16),
	M(ISET16, "iset16", ARGu16),

	M(ATI, "ati", NOARG),
	M(ATI8, "ati8", NOARG),
	M(ATI16, "ati16", NOARG),
	M(ATIGET, "atiget", NOARG),
	M(ATIGETu8, "atigetu8", NOARG),
	M(ATIGETu16, "atigetu16", NOARG),
	M(ATIGETi8, "atiget8", NOARG),
	M(ATIGETi16, "atiget16", NOARG),
	M(ATISET, "atiset", NOARG),
	M(ATISET8, "atiset8", NOARG),
	M(ATISET16, "atiset16", NOARG),

	M(PEEK, "peek", NOARG),
	M(PEEKi8, "peek8", NOARG),
	M(PEEKu8, "peeku8", NOARG),
	M(PEEKi16, "peek16", NOARG),
	M(PEEKu16, "peeku16", NOARG),
	M(POKE, "poke", NOARG),
	M(POKE8, "poke8", NOARG),
	M(POKE16, "poke16", NOARG),

	M(ADD, "+", NOARG),
	M(SUB, "-", NOARG),
	M(MUL, "*", NOARG),
	M(DIV, "/", NOARG),
	M(DIVu, "/u", NOARG),
	M(MOD, "%", NOARG),
	M(MODu, "%u", NOARG),
	M(AND, "&", NOARG),
	M(OR, "|", NOARG),
	M(XOR, "^", NOARG),
	M(SL, "<<", NOARG),
	M(SR, ">>", NOARG),
	M(SRu, ">>u", NOARG),

	M(ADDI, "addi", NOARG),
	//M(SUBI,  "",NOARG), --> ADDI
	M(MULI, "muli", NOARG),
	M(DIVI, "divi", NOARG),
	M(DIVIu, "diviu", NOARG),
	M(ANDI, "andi", NOARG),
	M(ORI, "ori", NOARG),
	M(XORI, "xori", NOARG),
	M(SLI, "sli", NOARG),
	M(SRI, "sri", NOARG),
	M(SRIu, "sriu", NOARG),

	M(ADD1, "++", NOARG),
	M(ADD2, "+=2", NOARG),
	M(ADD4, "+=4", NOARG),
	M(ADD8, "+=8", NOARG),
	M(SUB1, "--", NOARG),
	M(SUB2, "-=2", NOARG),
	M(SUB4, "-=4", NOARG),
	M(SUB8, "-=8", NOARG),

	M(SL1, "<<1", NOARG),
	M(SL2, "<<2", NOARG),
	M(SL3, "<<3", NOARG),
	M(SL4, "<<4", NOARG),
	M(SR1, ">>1", NOARG),
	M(SR2, ">>2", NOARG),
	M(SR3, ">>3", NOARG),
	M(SR4, ">>4", NOARG),
	M(SR1u, ">>u1", NOARG),
	M(SR2u, ">>u2", NOARG),
	M(SR3u, ">>u3", NOARG),
	M(SR4u, ">>u4", NOARG),

	M(NOT, "!", NOARG),
	M(CPL, "~", NOARG),
	M(NEG, "neg", NOARG),
	M(ABS, "abs", NOARG),
	M(SIGN, "sign", NOARG),

	M(EQ, "", ARGi16),
	M(NE, "", ARGi16),
	M(LT, "", ARGi16),
	M(LE, "", ARGi16),
	M(GT, "", ARGi16),
	M(GE, "", ARGi16),
	M(LTu, "", ARGi16),
	M(LEu, "", ARGi16),
	M(GTu, "", ARGi16),
	M(GEu, "", ARGi16),

	M(MIN, "min", NOARG),
	M(MINu, "minu", NOARG),
	M(MAX, "max", NOARG),
	M(MAXu, "maxu", NOARG),
	M(RANDOMu, "randomu", NOARG),
	//M(NOW, "now", NOARG),

	M(ADDf, "+f", NOARG),
	M(SUBf, "-f", NOARG),
	M(MULf, "*f", NOARG),
	M(DIVf, "/f", NOARG),
	M(SLf, "" << f, NOARG),
	M(SRf, ">>f", NOARG),
	M(ADD1f, "++f", NOARG),
	M(SUB1f, "--f", NOARG),
	M(NOTf, "!f", NOARG),
	M(NEGf, "negf", NOARG),
	M(ABSf, "absf", NOARG),
	M(SIGNf, "signf", NOARG),

	M(SIN, "sin", NOARG),
	M(COS, "cos", NOARG),
	M(TAN, "tan", NOARG),
	M(ASIN, "asin", NOARG),
	M(ACOS, "acos", NOARG),
	M(ATAN, "atan", NOARG),
	M(SINH, "sinh", NOARG),
	M(COSH, "cosh", NOARG),
	M(TANH, "tanh", NOARG),
	M(ASINH, "asinh", NOARG),
	M(ACOSH, "acosh", NOARG),
	M(ATANH, "atanh", NOARG),
	M(LOG2, "log2", NOARG),
	M(LOGE, "loge", NOARG),
	M(LOG10, "log10", NOARG),
	M(LOG, "log", NOARG),
	M(EXP2, "exp2", NOARG),
	M(EXPE, "expe", NOARG),
	M(EXP10, "exp10", NOARG),
	M(EXP, "exp", NOARG),
	M(SQRT, "sqrt", NOARG),
	M(FLOOR, "floor", NOARG),
	M(CEIL, "ceil", NOARG),
	M(ROUND, "round", NOARG),
	M(INTEG, "integ", NOARG),
	M(FRACT, "fract", NOARG),
	M(EXPONENT, "exponent", NOARG),
	M(MANTISSA, "mantissa", NOARG),
	M(COMPOSE, "compose", NOARG),
	M(MINf, "minf", NOARG),
	M(MAXf, "maxf", NOARG),
	M(RANDOMf1, "randomf1", NOARG),
	M(RANDOMf, "randomf", NOARG),
	//M(NOWf, "nowf", NOARG),

	M(EQf, "", NOARG),
	M(NEf, "", NOARG),
	M(LTf, "", NOARG),
	M(LEf, "", NOARG),
	M(GTf, "", NOARG),
	M(GEf, "", NOARG),

	M(ITOi8, "", NOARG),
	M(ITOi16, "", NOARG),
	M(UTOu8, "", NOARG),
	M(UTOu16, "", NOARG),
	M(ITOF, "", NOARG),
	M(FTOI, "", NOARG),
	M(UTOF, "", NOARG),
	M(FTOU, "", NOARG),
	M(ITOB, "", NOARG),
	M(FTOB, "", NOARG),

	M(JZ, "", ARGi16),
	M(JNZ, "", ARGi16),
	M(JEQ, "", ARGi16),
	M(JNE, "", ARGi16),
	M(JLT, "", ARGi16),
	M(JLE, "", ARGi16),
	M(JGT, "", ARGi16),
	M(JGE, "", ARGi16),
	M(JLTu, "", ARGi16),
	M(JLEu, "", ARGi16),
	M(JGTu, "", ARGi16),
	M(JGEu, "", ARGi16),
	//	M(JR_AND, "", 0),
	//	M(JR_OR, "", 0),

	M(JZf, "", ARGi16),
	M(JNZf, "", ARGi16),
	M(JEQf, "", ARGi16),
	M(JNEf, "", ARGi16),
	M(JLTf, "", ARGi16),
	M(JLEf, "", ARGi16),
	M(JGEf, "", ARGi16),
	M(JGTf, "", ARGi16),

	M(JEQI, "", ARGi16i16), // 2 arguments: N and Â±dis
	M(JNEI, "", ARGi16i16),
	M(JLTI, "", ARGi16i16),
	M(JLTIu, "", ARGi16i16),
	M(JLEI, "", ARGi16i16),
	M(JLEIu, "", ARGi16i16),
	M(JGEI, "", ARGi16i16),
	M(JGEIu, "", ARGi16i16),
	M(JGTI, "", ARGi16i16),
	M(JGTIu, "", ARGi16i16),

	M(JR, "", ARGi16),
	M(JP, "", ARGu32),
	M(JSR, "", ARGu32),
	M(CALL, "", ARGu32),
	M(RET, "", NOARG),
	M(SWITCH, "", NOARG),

	M(DROP, "", NOARG),
	M(DROP2, "", NOARG),
	M(DROP3, "", NOARG),
	M(DROPN, "", NOARG),

	M(DROP_RET, "", NOARG),
	M(DROP2_RET, "", NOARG),
	M(DROP3_RET, "", NOARG),
	M(DROPN_RET, "", NOARG),

	M(EXIT, "exit", NOARG),


	//
	M(ATIl, "", 0),
	M(ATIGETl, "", 0),
	M(ATISETl, "", 0),
	M(ISETl, "", 0),
	M(IGETl, "", 0),
	M(PEEKl, "", 0),
	M(POKEl, "", 0),
	M(CPLl, "", 0),
	M(NEGl, "", 0),
	M(NOTl, "", 0),
	M(NOTd, "", 0),
	M(NOTv, "", 0),
	M(ABSl, "", 0),
	M(SIGNl, "", 0),
	M(MINl, "", 0),
	M(MAXl, "", 0),
	M(MINul, "", 0),
	M(MAXul, "", 0),
	M(CPLv, "", 0),
	M(NEGv, "", 0),
	M(NEGd, "", 0),


	M(EQl, "", 0),
	M(EQd, "", 0),
	M(EQv, "", 0),

	M(NEl, "", 0),
	M(NEd, "", 0),
	M(NEv, "", 0),

	M(GTl, "", 0),
	M(GTul, "", 0),
	M(GTd, "", 0),
	M(GTv, "", 0),

	M(LTl, "", 0),
	M(LTul, "", 0),
	M(LTd, "", 0),
	M(LTv, "", 0),

	M(GEl, "", 0),
	M(GEul, "", 0),
	M(GEd, "", 0),
	M(GEv, "", 0),

	M(LEl, "", 0),
	M(LEul, "", 0),
	M(LEd, "", 0),
	M(LEv, "", 0),

	M(SLv, "", 0),
	M(SLl, "", 0),
	M(SLd, "", 0),
	M(SRv, "", 0),
	M(SRl, "", 0),
	M(SRul, "", 0),
	M(SRd, "", 0),

	M(ADDl, "", 0),
	M(ADDd, "", 0),
	M(ADDv, "", 0),
	M(SUBl, "", 0),
	M(SUBd, "", 0),
	M(SUBv, "", 0),
	M(MULl, "", 0),
	M(MULd, "", 0),
	M(MULv, "", 0),
	M(DIVl, "", 0),
	M(DIVul, "", 0),
	M(DIVd, "", 0),
	M(DIVv, "", 0),
	M(MODl, "", 0),
	M(MODul, "", 0),
	M(MODv, "", 0),
	M(ANDl, "", 0),
	M(ORl, "", 0),
	M(XORl, "", 0),
	M(ANDv, "", 0),
	M(ORv, "", 0),
	M(XORv, "", 0),


	M(SLGLv, "", 0),
	M(SRGLv, "", 0),
	M(ANDGLv, "", 0),
	M(ORGLv, "", 0),
	M(XORGLv, "", 0),
	M(ADDGLv, "", 0),
	M(SUBGLv, "", 0),
	M(MULGLv, "", 0),
	M(DIVGLv, "", 0),
	M(INCRv, "", 0),
	M(DECRv, "", 0),

	M(ADDGLd, "", 0),
	M(SUBGLd, "", 0),
	M(MULGLd, "", 0),
	M(DIVGLd, "", 0),
	M(INCRd, "", 0),
	M(DECRd, "", 0),

	M(ADDGLf, "", 0),
	M(SUBGLf, "", 0),
	M(MULGLf, "", 0),
	M(DIVGLf, "", 0),
	M(INCRf, "", 0),
	M(DECRf, "", 0),

	M(ADDGL, "", 0),
	M(SUBGL, "", 0),
	M(MULGL, "", 0),
	M(DIVGL, "", 0),
	M(DIVGLu, "", 0),
	M(ANDGL, "", 0),
	M(ORGL, "", 0),
	M(XORGL, "", 0),
	M(SLGL, "", 0),
	M(SRGL, "", 0),
	M(SRGLu, "", 0),
	M(INCR, "", 0),
	M(DECR, "", 0),

	M(ADDGLl, "", 0),
	M(SUBGLl, "", 0),
	M(MULGLl, "", 0),
	M(DIVGLl, "", 0),
	M(DIVGLlu, "", 0),
	M(ANDGLl, "", 0),
	M(ORGLl, "", 0),
	M(XORGLl, "", 0),
	M(SLGLl, "", 0),
	M(SRGLl, "", 0),
	M(SRGLlu, "", 0),
	M(INCRl, "", 0),
	M(DECRl, "", 0),

	M(ADDGLs, "", 0),
	M(SUBGLs, "", 0),
	M(ANDGLs, "", 0),
	M(ORGLs, "", 0),
	M(XORGLs, "", 0),
	M(INCRs, "", 0),
	M(DECRs, "", 0),

	M(ADDGLb, "", 0),
	M(SUBGLb, "", 0),
	M(ANDGLb, "", 0),
	M(ORGLb, "", 0),
	M(XORGLb, "", 0),
	M(INCRb, "", 0),
	M(DECRb, "", 0),


	M(NEW_OBJECT, "", ARGu16),
	M(NEW_ARRAY, "", ARGu16),
	M(SETCONST, "", NOARG),

	M(COUNT, "", NOARG),
	M(CLONE, "", NOARG),
	M(CONCAT, "", NOARG),
	M(CONCATu, "", NOARG),
	M(CONCATs, "", NOARG),
	M(LEFTRANGE, "", NOARG),
	M(MIDRANGE, "", NOARG),
	M(RIGHTRANGE, "", NOARG),

	M(CALL_VFUNC, "", NOARG),

	M(TRY, "", ARGi16),
	M(THROW, "", NOARG),
	M(TRYEND, "", NOARG),
	M(CATCH, "", NOARG),

	M(ENVIRON, "", NOARG),
	M(ARGV, "", NOARG),
	M(WAIT, "", NOARG),
	M(WAIT_UNTIL, "", NOARG),
	M(WAIT_DELAY, "", NOARG),
	M(RUN_GC, "", NOARG),

#ifdef M_wasnt_defined
};
#endif
#undef M_wasnt_defined
#undef M
